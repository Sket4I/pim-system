type Query {
  getChannelTypes: [Int]!
  getChannels: [Channel]
  getChannelStatus(id: ID!) : [ChannelStatus]
  getChannelStatusByCategories(id: ID!) : [ChannelCategoryStatus]
  getExecutions(channelId: ID!, offset: Int!, limit: Int!, order: JSON): ExecutionsResponse
  getExecutionById(id: ID!): Execution
  getChannelCategories(id: ID!) : ChannelCategoriesResponse
  getChannelAttributes(channelId: ID!, categoryId: ID!) : [ChannelAttribute]
  getChannelAttributeValues(channelId: ID!, categoryId: ID!, attributeId: ID!) : JSONObject
}

type Mutation {
  createChannel(identifier: String!, name: LanguageDependentString!, order: Int!, group: Boolean!, active: Boolean!, type: Int!, valid: [ID], visible: [ID], config: JSONObject, mappings: JSONObject, runtime: JSONObject, parentId: Int): ID!
  updateChannel(id: ID!, name: LanguageDependentString, order: Int, group: Boolean, active: Boolean, type: Int, valid: [ID], visible: [ID], config: JSONObject, mappings: JSONObject, runtime: JSONObject, parentId: Int) : ID!
  removeChannel(id: ID!) : Boolean!
  triggerChannel(id: ID!, language: String!, data: JSONObject) : Boolean
  bulkUpdateChannels(identifiers: [String]!, status: Int!, message: String, where: String!) : Boolean
}

type Channel {
  id: ID!
  identifier: String!
  name: LanguageDependentString!
  order: Int!,
  group: Boolean!,
  active: Boolean!
  type: Int!
  valid: [String]!
  visible: [String]!
  config: JSONObject!
  mappings: JSONObject!
  runtime: JSONObject!
  parentId: Int!,
  createdBy: String!
  createdAt: UTCDateTime!
  updatedBy: String!
  updatedAt: UTCDateTime!
}

type ChannelCategoryStatus {
  id: ID
  name: String
  statuses: [ChannelStatus]
}

type ChannelStatus {
  status: Int!
  count: Int!
}

type ExecutionsResponse {
  count: Int
  rows: [Execution]
}

type Execution {
  id: ID!
  channelId: ID!
  status: Int!
  startTime: UTCDateTime!
  finishTime: UTCDateTime
  storagePath: String
  log: String
  createdAt: UTCDateTime!
  updatedAt: UTCDateTime!
}

type ChannelCategoriesResponse {
  list: [ChannelCategory]
  tree: JSONObject
}

type ChannelCategory {
  id: String!
  name: String!
}

type ChannelAttribute {
  id: ID!
  name: String!
  category: String!
  required: Boolean!
  dictionary: Boolean!
  description: String
  dictionaryLink: String
  dictionaryLinkPost: JSONObject
}
